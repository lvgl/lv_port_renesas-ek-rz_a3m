/*******************************************************************************************************************//**
 * Audio driver for common
 **********************************************************************************************************************/

/*******************************************************************************************************************//**
 * @addtogroup AUDIO
 * @{
 **********************************************************************************************************************/
#ifndef _AUDIO_H_
#define _AUDIO_H_

/***********************************************************************************************************************
 * Includes
 **********************************************************************************************************************/
#include <string.h>
#include <stdio.h>
#include "bsp_api.h"
#include "hal_data.h"
#include "r_i2c_master_api.h"
#include "r_i2s_api.h"

/***********************************************************************************************************************
 * Macro definitions
 **********************************************************************************************************************/


/***********************************************************************************************************************
 * Typedef definitions
 **********************************************************************************************************************/
typedef struct st_audio_info {
    uint32_t    ckID;
    uint32_t    ckSize;
    uint32_t    format;
    uint32_t    subckID_1;
    uint32_t    subckSize_1;
    uint16_t    adFormat;
    uint16_t    channel;
    uint32_t    sr;
    uint32_t    avgBytesPerSec;
    uint16_t    blockAlign;
    uint16_t    bitsPerSample;
    uint32_t    subckID_2;
    uint32_t    subckSize_2;
} audio_info_t;

typedef enum e_ad_state {
	AD_STATE_STAY           = 0,
    AD_STATE_READ_START     = 1,
    AD_STATE_WRITE_START    = 2,
    AD_STATE_READ_END       = 3,
    AD_STATE_WRITE_END      = 4,
} ad_state_t;
/**********************************************************************************************************************
 * Exported global variables
 **********************************************************************************************************************/


/** @cond INC_HEADER_DEFS_SEC */

/** @endcond */

/***********************************************************************************************************************
 * Public APIs
 **********************************************************************************************************************/
void audio_ctrl_func( i2c_master_instance_t *p_i2c, i2s_instance_t *p_i2s );

/*******************************************************************************************************************//**
 * @} (end defgroup AUDIO)
 **********************************************************************************************************************/

#endif /* _AUDIO_H_ */
